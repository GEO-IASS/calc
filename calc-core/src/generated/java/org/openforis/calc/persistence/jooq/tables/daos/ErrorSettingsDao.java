/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.calc.engine.ParameterMap;
import org.openforis.calc.persistence.jooq.tables.ErrorSettingsTable;
import org.openforis.calc.persistence.jooq.tables.records.ErrorSettingsRecord;


import org.openforis.calc.metadata.ErrorSettings;
/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ErrorSettingsDao extends DAOImpl<ErrorSettingsRecord, ErrorSettings, Long> {

	/**
	 * Create a new ErrorSettingsDao without any configuration
	 */
	public ErrorSettingsDao() {
		super(ErrorSettingsTable.ERROR_SETTINGS, ErrorSettings.class);
	}

	/**
	 * Create a new ErrorSettingsDao with an attached configuration
	 */
	public ErrorSettingsDao(Configuration configuration) {
		super(ErrorSettingsTable.ERROR_SETTINGS, ErrorSettings.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Long getId(ErrorSettings object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<ErrorSettings> fetchById(Long... values) {
		return fetch(ErrorSettingsTable.ERROR_SETTINGS.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public ErrorSettings fetchOneById(Long value) {
		return fetchOne(ErrorSettingsTable.ERROR_SETTINGS.ID, value);
	}

	/**
	 * Fetch records that have <code>workspace_id IN (values)</code>
	 */
	public List<ErrorSettings> fetchByWorkspaceId(Long... values) {
		return fetch(ErrorSettingsTable.ERROR_SETTINGS.WORKSPACE_ID, values);
	}

	/**
	 * Fetch records that have <code>parameters IN (values)</code>
	 */
	public List<ErrorSettings> fetchByParameters(ParameterMap... values) {
		return fetch(ErrorSettingsTable.ERROR_SETTINGS.PARAMETERS, values);
	}

	/**
	 * Fetch records that have <code>script IN (values)</code>
	 */
	public List<ErrorSettings> fetchByScript(String... values) {
		return fetch(ErrorSettingsTable.ERROR_SETTINGS.SCRIPT, values);
	}
}
