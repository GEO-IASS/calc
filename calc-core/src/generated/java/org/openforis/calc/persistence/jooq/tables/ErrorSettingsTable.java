/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.engine.ParameterMap;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.ParameterMapConverter;
import org.openforis.calc.persistence.jooq.tables.records.ErrorSettingsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ErrorSettingsTable extends TableImpl<ErrorSettingsRecord> {

	private static final long serialVersionUID = 1100135536;

	/**
	 * The reference instance of <code>calc.error_settings</code>
	 */
	public static final ErrorSettingsTable ERROR_SETTINGS = new ErrorSettingsTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ErrorSettingsRecord> getRecordType() {
		return ErrorSettingsRecord.class;
	}

	/**
	 * The column <code>calc.error_settings.id</code>.
	 */
	public final TableField<ErrorSettingsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.error_settings.workspace_id</code>.
	 */
	public final TableField<ErrorSettingsRecord, Long> WORKSPACE_ID = createField("workspace_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>calc.error_settings.parameters</code>.
	 */
	public final TableField<ErrorSettingsRecord, ParameterMap> PARAMETERS = createField("parameters", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "", new ParameterMapConverter());

	/**
	 * The column <code>calc.error_settings.script</code>.
	 */
	public final TableField<ErrorSettingsRecord, String> SCRIPT = createField("script", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>calc.error_settings</code> table reference
	 */
	public ErrorSettingsTable() {
		this("error_settings", null);
	}

	/**
	 * Create an aliased <code>calc.error_settings</code> table reference
	 */
	public ErrorSettingsTable(String alias) {
		this(alias, ERROR_SETTINGS);
	}

	private ErrorSettingsTable(String alias, Table<ErrorSettingsRecord> aliased) {
		this(alias, aliased, null);
	}

	private ErrorSettingsTable(String alias, Table<ErrorSettingsRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ErrorSettingsRecord, Long> getIdentity() {
		return Keys.IDENTITY_ERROR_SETTINGS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ErrorSettingsRecord> getPrimaryKey() {
		return Keys.ERROR_SETTINGS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ErrorSettingsRecord>> getKeys() {
		return Arrays.<UniqueKey<ErrorSettingsRecord>>asList(Keys.ERROR_SETTINGS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ErrorSettingsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ErrorSettingsRecord, ?>>asList(Keys.ERROR_SETTINGS__ERROR_SETTINGS_WORKSPACE_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ErrorSettingsTable as(String alias) {
		return new ErrorSettingsTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ErrorSettingsTable rename(String name) {
		return new ErrorSettingsTable(name, null);
	}
}
