/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.calc.persistence.jooq.tables.VariableAggregateTable;
import org.openforis.calc.persistence.jooq.tables.records.VariableAggregateRecord;


import org.openforis.calc.metadata.VariableAggregate;
/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariableAggregateDao extends DAOImpl<VariableAggregateRecord, VariableAggregate, Integer> {

	/**
	 * Create a new VariableAggregateDao without any configuration
	 */
	public VariableAggregateDao() {
		super(VariableAggregateTable.VARIABLE_AGGREGATE, VariableAggregate.class);
	}

	/**
	 * Create a new VariableAggregateDao with an attached configuration
	 */
	public VariableAggregateDao(Configuration configuration) {
		super(VariableAggregateTable.VARIABLE_AGGREGATE, VariableAggregate.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(VariableAggregate object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<VariableAggregate> fetchById(Integer... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public VariableAggregate fetchOneById(Integer value) {
		return fetchOne(VariableAggregateTable.VARIABLE_AGGREGATE.ID, value);
	}

	/**
	 * Fetch records that have <code>variable_id IN (values)</code>
	 */
	public List<VariableAggregate> fetchByVariableId(Integer... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.VARIABLE_ID, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<VariableAggregate> fetchByName(String... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.NAME, values);
	}

	/**
	 * Fetch records that have <code>aggregate_column IN (values)</code>
	 */
	public List<VariableAggregate> fetchByAggregateColumn(String... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.AGGREGATE_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>aggregate_formula IN (values)</code>
	 */
	public List<VariableAggregate> fetchByAggregateFormula(String... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.AGGREGATE_FORMULA, values);
	}

	/**
	 * Fetch records that have <code>aggregate_type IN (values)</code>
	 */
	public List<VariableAggregate> fetchByAggregateType(String... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.AGGREGATE_TYPE, values);
	}

	/**
	 * Fetch records that have <code>caption IN (values)</code>
	 */
	public List<VariableAggregate> fetchByCaption(String... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.CAPTION, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<VariableAggregate> fetchByDescription(String... values) {
		return fetch(VariableAggregateTable.VARIABLE_AGGREGATE.DESCRIPTION, values);
	}
}
