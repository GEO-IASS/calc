/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.calc.persistence.jooq.tables.WorkspaceTable;
import org.openforis.calc.persistence.jooq.tables.records.WorkspaceRecord;


import org.openforis.calc.engine.Workspace;
/**
 * One cycle of an inventory.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkspaceDao extends DAOImpl<WorkspaceRecord, Workspace, Integer> {

	/**
	 * Create a new WorkspaceDao without any configuration
	 */
	public WorkspaceDao() {
		super(WorkspaceTable.WORKSPACE, Workspace.class);
	}

	/**
	 * Create a new WorkspaceDao with an attached configuration
	 */
	public WorkspaceDao(Configuration configuration) {
		super(WorkspaceTable.WORKSPACE, Workspace.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(Workspace object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<Workspace> fetchById(Integer... values) {
		return fetch(WorkspaceTable.WORKSPACE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public Workspace fetchOneById(Integer value) {
		return fetchOne(WorkspaceTable.WORKSPACE.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<Workspace> fetchByName(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.NAME, values);
	}

	/**
	 * Fetch records that have <code>collect_survey_uri IN (values)</code>
	 */
	public List<Workspace> fetchByCollectSurveyUri(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.COLLECT_SURVEY_URI, values);
	}

	/**
	 * Fetch records that have <code>input_schema IN (values)</code>
	 */
	public List<Workspace> fetchByInputSchema(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.INPUT_SCHEMA, values);
	}

	/**
	 * Fetch records that have <code>output_schema IN (values)</code>
	 */
	public List<Workspace> fetchByOutputSchema(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.OUTPUT_SCHEMA, values);
	}

	/**
	 * Fetch records that have <code>caption IN (values)</code>
	 */
	public List<Workspace> fetchByCaption(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.CAPTION, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<Workspace> fetchByDescription(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>active IN (values)</code>
	 */
	public List<Workspace> fetchByActive(Boolean... values) {
		return fetch(WorkspaceTable.WORKSPACE.ACTIVE, values);
	}

	/**
	 * Fetch records that have <code>phase1_plot_table IN (values)</code>
	 */
	public List<Workspace> fetchByPhase1PlotTable(String... values) {
		return fetch(WorkspaceTable.WORKSPACE.PHASE1_PLOT_TABLE, values);
	}
}
