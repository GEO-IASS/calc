/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.tables.records.CategoryLevelRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryLevelTable extends TableImpl<CategoryLevelRecord> {

	private static final long serialVersionUID = -269368621;

	/**
	 * The reference instance of <code>calc.category_level</code>
	 */
	public static final CategoryLevelTable CATEGORY_LEVEL = new CategoryLevelTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CategoryLevelRecord> getRecordType() {
		return CategoryLevelRecord.class;
	}

	/**
	 * The column <code>calc.category_level.id</code>.
	 */
	public final TableField<CategoryLevelRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.category_level.hierarchy_id</code>.
	 */
	public final TableField<CategoryLevelRecord, Integer> HIERARCHY_ID = createField("hierarchy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.name</code>.
	 */
	public final TableField<CategoryLevelRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.code_column</code>.
	 */
	public final TableField<CategoryLevelRecord, String> CODE_COLUMN = createField("code_column", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.rank</code>.
	 */
	public final TableField<CategoryLevelRecord, Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.table_name</code>.
	 */
	public final TableField<CategoryLevelRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.id_column</code>.
	 */
	public final TableField<CategoryLevelRecord, String> ID_COLUMN = createField("id_column", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.caption_column</code>.
	 */
	public final TableField<CategoryLevelRecord, String> CAPTION_COLUMN = createField("caption_column", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.category_level.caption</code>.
	 */
	public final TableField<CategoryLevelRecord, String> CAPTION = createField("caption", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.category_level.schema_name</code>.
	 */
	public final TableField<CategoryLevelRecord, String> SCHEMA_NAME = createField("schema_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>calc.category_level</code> table reference
	 */
	public CategoryLevelTable() {
		this("category_level", null);
	}

	/**
	 * Create an aliased <code>calc.category_level</code> table reference
	 */
	public CategoryLevelTable(String alias) {
		this(alias, CATEGORY_LEVEL);
	}

	private CategoryLevelTable(String alias, Table<CategoryLevelRecord> aliased) {
		this(alias, aliased, null);
	}

	private CategoryLevelTable(String alias, Table<CategoryLevelRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CategoryLevelRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CATEGORY_LEVEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CategoryLevelRecord> getPrimaryKey() {
		return Keys.HIERARCHY_LEVEL_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CategoryLevelRecord>> getKeys() {
		return Arrays.<UniqueKey<CategoryLevelRecord>>asList(Keys.HIERARCHY_LEVEL_PKEY, Keys.HIERARCHY_LEVEL_NAME_KEY, Keys.HIERARCHY_LEVEL_RANK_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CategoryLevelRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CategoryLevelRecord, ?>>asList(Keys.CATEGORY_LEVEL__CATEGORY_LEVEL_HIERARCHY_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CategoryLevelTable as(String alias) {
		return new CategoryLevelTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CategoryLevelTable rename(String name) {
		return new CategoryLevelTable(name, null);
	}
}
