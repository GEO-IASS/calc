/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.calc.persistence.jooq.tables.EntityTable;
import org.openforis.calc.persistence.jooq.tables.records.EntityRecord;


import org.openforis.calc.metadata.Entity;
/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityDao extends DAOImpl<EntityRecord, Entity, Integer> {

	/**
	 * Create a new EntityDao without any configuration
	 */
	public EntityDao() {
		super(EntityTable.ENTITY, Entity.class);
	}

	/**
	 * Create a new EntityDao with an attached configuration
	 */
	public EntityDao(Configuration configuration) {
		super(EntityTable.ENTITY, Entity.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(Entity object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<Entity> fetchById(Integer... values) {
		return fetch(EntityTable.ENTITY.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public Entity fetchOneById(Integer value) {
		return fetchOne(EntityTable.ENTITY.ID, value);
	}

	/**
	 * Fetch records that have <code>workspace_id IN (values)</code>
	 */
	public List<Entity> fetchByWorkspaceId(Integer... values) {
		return fetch(EntityTable.ENTITY.WORKSPACE_ID, values);
	}

	/**
	 * Fetch records that have <code>parent_entity_id IN (values)</code>
	 */
	public List<Entity> fetchByParentEntityId(Integer... values) {
		return fetch(EntityTable.ENTITY.PARENT_ENTITY_ID, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<Entity> fetchByName(String... values) {
		return fetch(EntityTable.ENTITY.NAME, values);
	}

	/**
	 * Fetch records that have <code>data_table IN (values)</code>
	 */
	public List<Entity> fetchByDataTable(String... values) {
		return fetch(EntityTable.ENTITY.DATA_TABLE, values);
	}

	/**
	 * Fetch records that have <code>x_column IN (values)</code>
	 */
	public List<Entity> fetchByXColumn(String... values) {
		return fetch(EntityTable.ENTITY.X_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>y_column IN (values)</code>
	 */
	public List<Entity> fetchByYColumn(String... values) {
		return fetch(EntityTable.ENTITY.Y_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>srs_column IN (values)</code>
	 */
	public List<Entity> fetchBySrsColumn(String... values) {
		return fetch(EntityTable.ENTITY.SRS_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>location_column IN (values)</code>
	 */
	public List<Entity> fetchByLocationColumn(String... values) {
		return fetch(EntityTable.ENTITY.LOCATION_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>input IN (values)</code>
	 */
	public List<Entity> fetchByInput(Boolean... values) {
		return fetch(EntityTable.ENTITY.INPUT, values);
	}

	/**
	 * Fetch records that have <code>override IN (values)</code>
	 */
	public List<Entity> fetchByOverride(Boolean... values) {
		return fetch(EntityTable.ENTITY.OVERRIDE, values);
	}

	/**
	 * Fetch records that have <code>id_column IN (values)</code>
	 */
	public List<Entity> fetchByIdColumn(String... values) {
		return fetch(EntityTable.ENTITY.ID_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>parent_id_column IN (values)</code>
	 */
	public List<Entity> fetchByParentIdColumn(String... values) {
		return fetch(EntityTable.ENTITY.PARENT_ID_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>sampling_unit IN (values)</code>
	 */
	public List<Entity> fetchBySamplingUnit(Boolean... values) {
		return fetch(EntityTable.ENTITY.SAMPLING_UNIT, values);
	}

	/**
	 * Fetch records that have <code>unit_of_analysis IN (values)</code>
	 */
	public List<Entity> fetchByUnitOfAnalysis(Boolean... values) {
		return fetch(EntityTable.ENTITY.UNIT_OF_ANALYSIS, values);
	}

	/**
	 * Fetch records that have <code>cluster_variable_id IN (values)</code>
	 */
	public List<Entity> fetchByClusterVariableId(Integer... values) {
		return fetch(EntityTable.ENTITY.CLUSTER_VARIABLE_ID, values);
	}

	/**
	 * Fetch records that have <code>unit_no_variable_id IN (values)</code>
	 */
	public List<Entity> fetchByUnitNoVariableId(Integer... values) {
		return fetch(EntityTable.ENTITY.UNIT_NO_VARIABLE_ID, values);
	}

	/**
	 * Fetch records that have <code>original_id IN (values)</code>
	 */
	public List<Entity> fetchByOriginalId(Integer... values) {
		return fetch(EntityTable.ENTITY.ORIGINAL_ID, values);
	}

	/**
	 * Fetch records that have <code>caption IN (values)</code>
	 */
	public List<Entity> fetchByCaption(String... values) {
		return fetch(EntityTable.ENTITY.CAPTION, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<Entity> fetchByDescription(String... values) {
		return fetch(EntityTable.ENTITY.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>sort_order IN (values)</code>
	 */
	public List<Entity> fetchBySortOrder(Integer... values) {
		return fetch(EntityTable.ENTITY.SORT_ORDER, values);
	}

	/**
	 * Fetch records that have <code>plot_area_script IN (values)</code>
	 */
	public List<Entity> fetchByPlotAreaScript(String... values) {
		return fetch(EntityTable.ENTITY.PLOT_AREA_SCRIPT, values);
	}
}
