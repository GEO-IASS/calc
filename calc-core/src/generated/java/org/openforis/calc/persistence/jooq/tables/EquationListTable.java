/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.engine.ParameterMap;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.ParameterMapConverter;
import org.openforis.calc.persistence.jooq.tables.records.EquationListRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EquationListTable extends TableImpl<EquationListRecord> {

	private static final long serialVersionUID = 514989837;

	/**
	 * The reference instance of <code>calc.equation_list</code>
	 */
	public static final EquationListTable EQUATION_LIST = new EquationListTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EquationListRecord> getRecordType() {
		return EquationListRecord.class;
	}

	/**
	 * The column <code>calc.equation_list.id</code>.
	 */
	public final TableField<EquationListRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.equation_list.name</code>.
	 */
	public final TableField<EquationListRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.equation_list.workspace_id</code>.
	 */
	public final TableField<EquationListRecord, Integer> WORKSPACE_ID = createField("workspace_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>calc.equation_list.parameters</code>.
	 */
	public final TableField<EquationListRecord, ParameterMap> PARAMETERS = createField("parameters", org.jooq.impl.SQLDataType.CLOB, this, "", new ParameterMapConverter());

	/**
	 * Create a <code>calc.equation_list</code> table reference
	 */
	public EquationListTable() {
		this("equation_list", null);
	}

	/**
	 * Create an aliased <code>calc.equation_list</code> table reference
	 */
	public EquationListTable(String alias) {
		this(alias, EQUATION_LIST);
	}

	private EquationListTable(String alias, Table<EquationListRecord> aliased) {
		this(alias, aliased, null);
	}

	private EquationListTable(String alias, Table<EquationListRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EquationListRecord, Long> getIdentity() {
		return Keys.IDENTITY_EQUATION_LIST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EquationListRecord> getPrimaryKey() {
		return Keys.EQUATION_LIST_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EquationListRecord>> getKeys() {
		return Arrays.<UniqueKey<EquationListRecord>>asList(Keys.EQUATION_LIST_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<EquationListRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<EquationListRecord, ?>>asList(Keys.EQUATION_LIST__EQUATION_LIST_WORKSPACE_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EquationListTable as(String alias) {
		return new EquationListTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EquationListTable rename(String name) {
		return new EquationListTable(name, null);
	}
}
