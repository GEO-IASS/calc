/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class SpecimenRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.SpecimenRecord> {

	private static final long serialVersionUID = -1393099356;

	/**
	 * The table column <code>calc.specimen.specimen_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setSpecimenId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_ID, value);
	}

	/**
	 * The table column <code>calc.specimen.specimen_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getSpecimenId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_ID);
	}

	/**
	 * The table column <code>calc.specimen.specimen_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.SpecimenCategoricalValueRecord> fetchSpecimenCategoricalValueList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.SpecimenCategoricalValue.SPECIMEN_CATEGORICAL_VALUE)
			.where(org.openforis.calc.persistence.jooq.tables.SpecimenCategoricalValue.SPECIMEN_CATEGORICAL_VALUE.SPECIMEN_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.specimen.plot_section_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_plot_section_fkey
	 * FOREIGN KEY (plot_section_id)
	 * REFERENCES calc.plot_section (plot_section_id)
	 * </pre></code>
	 */
	public void setPlotSectionId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.PLOT_SECTION_ID, value);
	}

	/**
	 * The table column <code>calc.specimen.plot_section_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_plot_section_fkey
	 * FOREIGN KEY (plot_section_id)
	 * REFERENCES calc.plot_section (plot_section_id)
	 * </pre></code>
	 */
	public java.lang.Integer getPlotSectionId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.PLOT_SECTION_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.PlotSectionRecord 
	 * PlotSectionRecord}
	 */
	public void setPlotSectionId(org.openforis.calc.persistence.jooq.tables.records.PlotSectionRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.PLOT_SECTION_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.PLOT_SECTION_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.PlotSection.PLOT_SECTION.PLOT_SECTION_ID));
		}
	}

	/**
	 * The table column <code>calc.specimen.plot_section_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_plot_section_fkey
	 * FOREIGN KEY (plot_section_id)
	 * REFERENCES calc.plot_section (plot_section_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.PlotSectionRecord fetchPlotSection() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.PlotSection.PLOT_SECTION)
			.where(org.openforis.calc.persistence.jooq.tables.PlotSection.PLOT_SECTION.PLOT_SECTION_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.PLOT_SECTION_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.specimen.obs_unit_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_obs_unit_fkey
	 * FOREIGN KEY (obs_unit_id)
	 * REFERENCES calc.observation_unit (obs_unit_id)
	 * </pre></code>
	 */
	public void setObsUnitId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.OBS_UNIT_ID, value);
	}

	/**
	 * The table column <code>calc.specimen.obs_unit_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_obs_unit_fkey
	 * FOREIGN KEY (obs_unit_id)
	 * REFERENCES calc.observation_unit (obs_unit_id)
	 * </pre></code>
	 */
	public java.lang.Integer getObsUnitId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.OBS_UNIT_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord 
	 * ObservationUnitRecord}
	 */
	public void setObsUnitId(org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.OBS_UNIT_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.OBS_UNIT_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID));
		}
	}

	/**
	 * The table column <code>calc.specimen.obs_unit_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_obs_unit_fkey
	 * FOREIGN KEY (obs_unit_id)
	 * REFERENCES calc.observation_unit (obs_unit_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord fetchObservationUnit() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT)
			.where(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.OBS_UNIT_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.specimen.specimen_no</code>
	 */
	public void setSpecimenNo(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_NO, value);
	}

	/**
	 * The table column <code>calc.specimen.specimen_no</code>
	 */
	public java.lang.Integer getSpecimenNo() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_NO);
	}

	/**
	 * The table column <code>calc.specimen.specimen_taxon_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_taxon_fkey
	 * FOREIGN KEY (specimen_taxon_id)
	 * REFERENCES calc.taxon (taxon_id)
	 * </pre></code>
	 */
	public void setSpecimenTaxonId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_TAXON_ID, value);
	}

	/**
	 * The table column <code>calc.specimen.specimen_taxon_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_taxon_fkey
	 * FOREIGN KEY (specimen_taxon_id)
	 * REFERENCES calc.taxon (taxon_id)
	 * </pre></code>
	 */
	public java.lang.Integer getSpecimenTaxonId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_TAXON_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.TaxonRecord 
	 * TaxonRecord}
	 */
	public void setSpecimenTaxonId(org.openforis.calc.persistence.jooq.tables.records.TaxonRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_TAXON_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_TAXON_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.Taxon.TAXON.TAXON_ID));
		}
	}

	/**
	 * The table column <code>calc.specimen.specimen_taxon_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT specimen__specimen_taxon_fkey
	 * FOREIGN KEY (specimen_taxon_id)
	 * REFERENCES calc.taxon (taxon_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.TaxonRecord fetchTaxon() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.Taxon.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.Taxon.TAXON.TAXON_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_TAXON_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.specimen.specimen_survey_date</code>
	 */
	public void setSpecimenSurveyDate(java.sql.Date value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_SURVEY_DATE, value);
	}

	/**
	 * The table column <code>calc.specimen.specimen_survey_date</code>
	 */
	public java.sql.Date getSpecimenSurveyDate() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.SPECIMEN_SURVEY_DATE);
	}

	/**
	 * The table column <code>calc.specimen.inclusion_area</code>
	 */
	public void setInclusionArea(java.lang.Double value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.INCLUSION_AREA, value);
	}

	/**
	 * The table column <code>calc.specimen.inclusion_area</code>
	 */
	public java.lang.Double getInclusionArea() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.INCLUSION_AREA);
	}

	/**
	 * Create a detached SpecimenRecord
	 */
	public SpecimenRecord() {
		super(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN);
	}
}
