/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class ObservationUnitRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord> {

	private static final long serialVersionUID = -636739505;

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setObsUnitId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID, value);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getObsUnitId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.InterviewRecord> fetchInterviewList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.Interview.INTERVIEW)
			.where(org.openforis.calc.persistence.jooq.tables.Interview.INTERVIEW.OBS_UNIT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord> fetchObservationUnitList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT)
			.where(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_PARENT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.SamplePlotRecord> fetchSamplePlotList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.SamplePlot.SAMPLE_PLOT)
			.where(org.openforis.calc.persistence.jooq.tables.SamplePlot.SAMPLE_PLOT.OBS_UNIT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.SpecimenRecord> fetchSpecimenList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN)
			.where(org.openforis.calc.persistence.jooq.tables.Specimen.SPECIMEN.OBS_UNIT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.VariableRecord> fetchVariableList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.Variable.VARIABLE)
			.where(org.openforis.calc.persistence.jooq.tables.Variable.VARIABLE.OBS_UNIT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.observation_unit.survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_survey_fkey
	 * FOREIGN KEY (survey_id)
	 * REFERENCES calc.survey (survey_id)
	 * </pre></code>
	 */
	public void setSurveyId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.SURVEY_ID, value);
	}

	/**
	 * The table column <code>calc.observation_unit.survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_survey_fkey
	 * FOREIGN KEY (survey_id)
	 * REFERENCES calc.survey (survey_id)
	 * </pre></code>
	 */
	public java.lang.Integer getSurveyId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.SURVEY_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.SurveyRecord 
	 * SurveyRecord}
	 */
	public void setSurveyId(org.openforis.calc.persistence.jooq.tables.records.SurveyRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.SURVEY_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.SURVEY_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.Survey.SURVEY.SURVEY_ID));
		}
	}

	/**
	 * The table column <code>calc.observation_unit.survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_survey_fkey
	 * FOREIGN KEY (survey_id)
	 * REFERENCES calc.survey (survey_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.SurveyRecord fetchSurvey() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.Survey.SURVEY)
			.where(org.openforis.calc.persistence.jooq.tables.Survey.SURVEY.SURVEY_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.SURVEY_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_name</code>
	 */
	public void setObsUnitName(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_NAME, value);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_name</code>
	 */
	public java.lang.String getObsUnitName() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_NAME);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_type</code>
	 */
	public void setObsUnitType(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_TYPE, value);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_type</code>
	 */
	public java.lang.String getObsUnitType() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_TYPE);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_parent_fkey
	 * FOREIGN KEY (obs_unit_parent_id)
	 * REFERENCES calc.observation_unit (obs_unit_id)
	 * </pre></code>
	 */
	public void setObsUnitParentId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_PARENT_ID, value);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_parent_fkey
	 * FOREIGN KEY (obs_unit_parent_id)
	 * REFERENCES calc.observation_unit (obs_unit_id)
	 * </pre></code>
	 */
	public java.lang.Integer getObsUnitParentId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_PARENT_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord 
	 * ObservationUnitRecord}
	 */
	public void setObsUnitParentId(org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_PARENT_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_PARENT_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID));
		}
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_parent_fkey
	 * FOREIGN KEY (obs_unit_parent_id)
	 * REFERENCES calc.observation_unit (obs_unit_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord fetchObservationUnit() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT)
			.where(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_PARENT_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_description</code>
	 */
	public void setObsUnitDescription(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_DESCRIPTION, value);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_description</code>
	 */
	public java.lang.String getObsUnitDescription() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_DESCRIPTION);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_label</code>
	 */
	public void setObsUnitLabel(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_LABEL, value);
	}

	/**
	 * The table column <code>calc.observation_unit.obs_unit_label</code>
	 */
	public java.lang.String getObsUnitLabel() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.OBS_UNIT_LABEL);
	}

	/**
	 * The table column <code>calc.observation_unit.taxonomic_checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_taxonomic_checklist_fkey
	 * FOREIGN KEY (taxonomic_checklist_id)
	 * REFERENCES calc.taxonomic_checklist (checklist_id)
	 * </pre></code>
	 */
	public void setTaxonomicChecklistId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.TAXONOMIC_CHECKLIST_ID, value);
	}

	/**
	 * The table column <code>calc.observation_unit.taxonomic_checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_taxonomic_checklist_fkey
	 * FOREIGN KEY (taxonomic_checklist_id)
	 * REFERENCES calc.taxonomic_checklist (checklist_id)
	 * </pre></code>
	 */
	public java.lang.Integer getTaxonomicChecklistId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.TAXONOMIC_CHECKLIST_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.TaxonomicChecklistRecord 
	 * TaxonomicChecklistRecord}
	 */
	public void setTaxonomicChecklistId(org.openforis.calc.persistence.jooq.tables.records.TaxonomicChecklistRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.TAXONOMIC_CHECKLIST_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.TAXONOMIC_CHECKLIST_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.TaxonomicChecklist.TAXONOMIC_CHECKLIST.CHECKLIST_ID));
		}
	}

	/**
	 * The table column <code>calc.observation_unit.taxonomic_checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT observation_unit__obs_unit_taxonomic_checklist_fkey
	 * FOREIGN KEY (taxonomic_checklist_id)
	 * REFERENCES calc.taxonomic_checklist (checklist_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.TaxonomicChecklistRecord fetchTaxonomicChecklist() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonomicChecklist.TAXONOMIC_CHECKLIST)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonomicChecklist.TAXONOMIC_CHECKLIST.CHECKLIST_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT.TAXONOMIC_CHECKLIST_ID)))
			.fetchOne();
	}

	/**
	 * Create a detached ObservationUnitRecord
	 */
	public ObservationUnitRecord() {
		super(org.openforis.calc.persistence.jooq.tables.ObservationUnit.OBSERVATION_UNIT);
	}
}
