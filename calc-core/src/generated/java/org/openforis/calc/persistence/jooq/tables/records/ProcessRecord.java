/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class ProcessRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord> {

	private static final long serialVersionUID = -1779901857;

	/**
	 * The table column <code>calc.process.process_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setProcessId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_ID, value);
	}

	/**
	 * The table column <code>calc.process.process_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getProcessId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_ID);
	}

	/**
	 * The table column <code>calc.process.process_id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.OperationParameterRecord> fetchOperationParameterList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.OperationParameter.OPERATION_PARAMETER)
			.where(org.openforis.calc.persistence.jooq.tables.OperationParameter.OPERATION_PARAMETER.PROCESS_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.process.chain_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_processing_chain
	 * FOREIGN KEY (chain_id)
	 * REFERENCES calc.processing_chain (processing_chain_id)
	 * </pre></code>
	 */
	public void setChainId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.CHAIN_ID, value);
	}

	/**
	 * The table column <code>calc.process.chain_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_processing_chain
	 * FOREIGN KEY (chain_id)
	 * REFERENCES calc.processing_chain (processing_chain_id)
	 * </pre></code>
	 */
	public java.lang.Integer getChainId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.CHAIN_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.ProcessingChainRecord 
	 * ProcessingChainRecord}
	 */
	public void setChainId(org.openforis.calc.persistence.jooq.tables.records.ProcessingChainRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.CHAIN_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.CHAIN_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.ProcessingChain.PROCESSING_CHAIN.PROCESSING_CHAIN_ID));
		}
	}

	/**
	 * The table column <code>calc.process.chain_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_processing_chain
	 * FOREIGN KEY (chain_id)
	 * REFERENCES calc.processing_chain (processing_chain_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.ProcessingChainRecord fetchProcessingChain() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.ProcessingChain.PROCESSING_CHAIN)
			.where(org.openforis.calc.persistence.jooq.tables.ProcessingChain.PROCESSING_CHAIN.PROCESSING_CHAIN_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.CHAIN_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.process.operation_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_operation
	 * FOREIGN KEY (operation_id)
	 * REFERENCES calc.operation (operation_id)
	 * </pre></code>
	 */
	public void setOperationId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.OPERATION_ID, value);
	}

	/**
	 * The table column <code>calc.process.operation_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_operation
	 * FOREIGN KEY (operation_id)
	 * REFERENCES calc.operation (operation_id)
	 * </pre></code>
	 */
	public java.lang.Integer getOperationId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.OPERATION_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.OperationRecord 
	 * OperationRecord}
	 */
	public void setOperationId(org.openforis.calc.persistence.jooq.tables.records.OperationRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.OPERATION_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.OPERATION_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.Operation.OPERATION.OPERATION_ID));
		}
	}

	/**
	 * The table column <code>calc.process.operation_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_operation
	 * FOREIGN KEY (operation_id)
	 * REFERENCES calc.operation (operation_id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.OperationRecord fetchOperation() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.Operation.OPERATION)
			.where(org.openforis.calc.persistence.jooq.tables.Operation.OPERATION.OPERATION_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.OPERATION_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.process.process_description</code>
	 */
	public void setProcessDescription(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_DESCRIPTION, value);
	}

	/**
	 * The table column <code>calc.process.process_description</code>
	 */
	public java.lang.String getProcessDescription() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_DESCRIPTION);
	}

	/**
	 * The table column <code>calc.process.process_order</code>
	 */
	public void setProcessOrder(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_ORDER, value);
	}

	/**
	 * The table column <code>calc.process.process_order</code>
	 */
	public java.lang.Integer getProcessOrder() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_ORDER);
	}

	/**
	 * The table column <code>calc.process.process_label</code>
	 */
	public void setProcessLabel(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_LABEL, value);
	}

	/**
	 * The table column <code>calc.process.process_label</code>
	 */
	public java.lang.String getProcessLabel() {
		return getValue(org.openforis.calc.persistence.jooq.tables.Process.PROCESS.PROCESS_LABEL);
	}

	/**
	 * Create a detached ProcessRecord
	 */
	public ProcessRecord() {
		super(org.openforis.calc.persistence.jooq.tables.Process.PROCESS);
	}
}
