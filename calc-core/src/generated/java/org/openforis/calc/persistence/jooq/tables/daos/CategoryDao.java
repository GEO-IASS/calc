/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.calc.persistence.jooq.tables.CategoryTable;
import org.openforis.calc.persistence.jooq.tables.records.CategoryRecord;


import org.openforis.calc.metadata.Category;
/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryDao extends DAOImpl<CategoryRecord, Category, Integer> {

	/**
	 * Create a new CategoryDao without any configuration
	 */
	public CategoryDao() {
		super(CategoryTable.CATEGORY, Category.class);
	}

	/**
	 * Create a new CategoryDao with an attached configuration
	 */
	public CategoryDao(Configuration configuration) {
		super(CategoryTable.CATEGORY, Category.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(Category object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<Category> fetchById(Integer... values) {
		return fetch(CategoryTable.CATEGORY.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public Category fetchOneById(Integer value) {
		return fetchOne(CategoryTable.CATEGORY.ID, value);
	}

	/**
	 * Fetch records that have <code>original_id IN (values)</code>
	 */
	public List<Category> fetchByOriginalId(Integer... values) {
		return fetch(CategoryTable.CATEGORY.ORIGINAL_ID, values);
	}

	/**
	 * Fetch records that have <code>caption IN (values)</code>
	 */
	public List<Category> fetchByCaption(String... values) {
		return fetch(CategoryTable.CATEGORY.CAPTION, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<Category> fetchByDescription(String... values) {
		return fetch(CategoryTable.CATEGORY.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>workspace_id IN (values)</code>
	 */
	public List<Category> fetchByWorkspaceId(Long... values) {
		return fetch(CategoryTable.CATEGORY.WORKSPACE_ID, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<Category> fetchByName(String... values) {
		return fetch(CategoryTable.CATEGORY.NAME, values);
	}
}
