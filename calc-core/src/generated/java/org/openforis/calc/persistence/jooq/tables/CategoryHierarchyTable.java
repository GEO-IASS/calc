/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.tables.records.CategoryHierarchyRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryHierarchyTable extends TableImpl<CategoryHierarchyRecord> {

	private static final long serialVersionUID = -1740965665;

	/**
	 * The reference instance of <code>calc.category_hierarchy</code>
	 */
	public static final CategoryHierarchyTable CATEGORY_HIERARCHY = new CategoryHierarchyTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CategoryHierarchyRecord> getRecordType() {
		return CategoryHierarchyRecord.class;
	}

	/**
	 * The column <code>calc.category_hierarchy.id</code>.
	 */
	public final TableField<CategoryHierarchyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.category_hierarchy.name</code>.
	 */
	public final TableField<CategoryHierarchyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.category_hierarchy.caption</code>.
	 */
	public final TableField<CategoryHierarchyRecord, String> CAPTION = createField("caption", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.category_hierarchy.description</code>.
	 */
	public final TableField<CategoryHierarchyRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>calc.category_hierarchy.category_id</code>.
	 */
	public final TableField<CategoryHierarchyRecord, Long> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>calc.category_hierarchy</code> table reference
	 */
	public CategoryHierarchyTable() {
		this("category_hierarchy", null);
	}

	/**
	 * Create an aliased <code>calc.category_hierarchy</code> table reference
	 */
	public CategoryHierarchyTable(String alias) {
		this(alias, CATEGORY_HIERARCHY);
	}

	private CategoryHierarchyTable(String alias, Table<CategoryHierarchyRecord> aliased) {
		this(alias, aliased, null);
	}

	private CategoryHierarchyTable(String alias, Table<CategoryHierarchyRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CategoryHierarchyRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CATEGORY_HIERARCHY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CategoryHierarchyRecord> getPrimaryKey() {
		return Keys.HIERARCHY_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CategoryHierarchyRecord>> getKeys() {
		return Arrays.<UniqueKey<CategoryHierarchyRecord>>asList(Keys.HIERARCHY_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CategoryHierarchyRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CategoryHierarchyRecord, ?>>asList(Keys.CATEGORY_HIERARCHY__CATEGORY_HIERARCHY_CATEGORY_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CategoryHierarchyTable as(String alias) {
		return new CategoryHierarchyTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CategoryHierarchyTable rename(String name) {
		return new CategoryHierarchyTable(name, null);
	}
}
