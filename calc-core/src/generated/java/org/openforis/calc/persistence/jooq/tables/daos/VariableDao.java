/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.openforis.calc.metadata.Variable.Scale;
import org.openforis.calc.persistence.jooq.tables.VariableTable;
import org.openforis.calc.persistence.jooq.tables.records.VariableRecord;


import org.openforis.calc.metadata.Variable;
/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariableDao extends DAOImpl<VariableRecord, Variable, Integer> {

	/**
	 * Create a new VariableDao without any configuration
	 */
	public VariableDao() {
		super(VariableTable.VARIABLE, Variable.class);
	}

	/**
	 * Create a new VariableDao with an attached configuration
	 */
	public VariableDao(Configuration configuration) {
		super(VariableTable.VARIABLE, Variable.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(Variable object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<Variable> fetchById(Integer... values) {
		return fetch(VariableTable.VARIABLE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public Variable fetchOneById(Integer value) {
		return fetchOne(VariableTable.VARIABLE.ID, value);
	}

	/**
	 * Fetch records that have <code>entity_id IN (values)</code>
	 */
	public List<Variable> fetchByEntityId(Integer... values) {
		return fetch(VariableTable.VARIABLE.ENTITY_ID, values);
	}

	/**
	 * Fetch records that have <code>input_value_column IN (values)</code>
	 */
	public List<Variable> fetchByInputValueColumn(String... values) {
		return fetch(VariableTable.VARIABLE.INPUT_VALUE_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>scale IN (values)</code>
	 */
	public List<Variable> fetchByScale(Scale... values) {
		return fetch(VariableTable.VARIABLE.SCALE, values);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<Variable> fetchByName(String... values) {
		return fetch(VariableTable.VARIABLE.NAME, values);
	}

	/**
	 * Fetch records that have <code>original_id IN (values)</code>
	 */
	public List<Variable> fetchByOriginalId(Integer... values) {
		return fetch(VariableTable.VARIABLE.ORIGINAL_ID, values);
	}

	/**
	 * Fetch records that have <code>default_value IN (values)</code>
	 */
	public List<Variable> fetchByDefaultValue(String... values) {
		return fetch(VariableTable.VARIABLE.DEFAULT_VALUE, values);
	}

	/**
	 * Fetch records that have <code>multiple_response IN (values)</code>
	 */
	public List<Variable> fetchByMultipleResponse(Boolean... values) {
		return fetch(VariableTable.VARIABLE.MULTIPLE_RESPONSE, values);
	}

	/**
	 * Fetch records that have <code>override IN (values)</code>
	 */
	public List<Variable> fetchByOverride(Boolean... values) {
		return fetch(VariableTable.VARIABLE.OVERRIDE, values);
	}

	/**
	 * Fetch records that have <code>degenerate_dimension IN (values)</code>
	 */
	public List<Variable> fetchByDegenerateDimension(Boolean... values) {
		return fetch(VariableTable.VARIABLE.DEGENERATE_DIMENSION, values);
	}

	/**
	 * Fetch records that have <code>input_category_id_column IN (values)</code>
	 */
	public List<Variable> fetchByInputCategoryIdColumn(String... values) {
		return fetch(VariableTable.VARIABLE.INPUT_CATEGORY_ID_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>disaggregate IN (values)</code>
	 */
	public List<Variable> fetchByDisaggregate(Boolean... values) {
		return fetch(VariableTable.VARIABLE.DISAGGREGATE, values);
	}

	/**
	 * Fetch records that have <code>output_value_column IN (values)</code>
	 */
	public List<Variable> fetchByOutputValueColumn(String... values) {
		return fetch(VariableTable.VARIABLE.OUTPUT_VALUE_COLUMN, values);
	}

	/**
	 * Fetch records that have <code>caption IN (values)</code>
	 */
	public List<Variable> fetchByCaption(String... values) {
		return fetch(VariableTable.VARIABLE.CAPTION, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<Variable> fetchByDescription(String... values) {
		return fetch(VariableTable.VARIABLE.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>sort_order IN (values)</code>
	 */
	public List<Variable> fetchBySortOrder(Integer... values) {
		return fetch(VariableTable.VARIABLE.SORT_ORDER, values);
	}

	/**
	 * Fetch records that have <code>variable_per_ha_id IN (values)</code>
	 */
	public List<Variable> fetchByVariablePerHaId(Integer... values) {
		return fetch(VariableTable.VARIABLE.VARIABLE_PER_HA_ID, values);
	}

	/**
	 * Fetch records that have <code>category_level_id IN (values)</code>
	 */
	public List<Variable> fetchByCategoryLevelId(Long... values) {
		return fetch(VariableTable.VARIABLE.CATEGORY_LEVEL_ID, values);
	}

	/**
	 * Fetch records that have <code>specie_category IN (values)</code>
	 */
	public List<Variable> fetchBySpecieCategory(Boolean... values) {
		return fetch(VariableTable.VARIABLE.SPECIE_CATEGORY, values);
	}
}
