/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.tables.records.EntityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityTable extends TableImpl<EntityRecord> {

	private static final long serialVersionUID = 1742217451;

	/**
	 * The reference instance of <code>calc.entity</code>
	 */
	public static final EntityTable ENTITY = new EntityTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EntityRecord> getRecordType() {
		return EntityRecord.class;
	}

	/**
	 * The column <code>calc.entity.id</code>.
	 */
	public final TableField<EntityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.entity.workspace_id</code>.
	 */
	public final TableField<EntityRecord, Integer> WORKSPACE_ID = createField("workspace_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>calc.entity.parent_entity_id</code>.
	 */
	public final TableField<EntityRecord, Integer> PARENT_ENTITY_ID = createField("parent_entity_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>calc.entity.name</code>.
	 */
	public final TableField<EntityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.entity.data_table</code>.
	 */
	public final TableField<EntityRecord, String> DATA_TABLE = createField("data_table", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.entity.x_column</code>.
	 */
	public final TableField<EntityRecord, String> X_COLUMN = createField("x_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.y_column</code>.
	 */
	public final TableField<EntityRecord, String> Y_COLUMN = createField("y_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.srs_column</code>.
	 */
	public final TableField<EntityRecord, String> SRS_COLUMN = createField("srs_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.location_column</code>.
	 */
	public final TableField<EntityRecord, String> LOCATION_COLUMN = createField("location_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.input</code>.
	 */
	public final TableField<EntityRecord, Boolean> INPUT = createField("input", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>calc.entity.override</code>.
	 */
	public final TableField<EntityRecord, Boolean> OVERRIDE = createField("override", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>calc.entity.id_column</code>.
	 */
	public final TableField<EntityRecord, String> ID_COLUMN = createField("id_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.parent_id_column</code>.
	 */
	public final TableField<EntityRecord, String> PARENT_ID_COLUMN = createField("parent_id_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.sampling_unit</code>.
	 */
	public final TableField<EntityRecord, Boolean> SAMPLING_UNIT = createField("sampling_unit", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "");

	/**
	 * The column <code>calc.entity.unit_of_analysis</code>.
	 */
	public final TableField<EntityRecord, Boolean> UNIT_OF_ANALYSIS = createField("unit_of_analysis", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "");

	/**
	 * The column <code>calc.entity.cluster_variable_id</code>.
	 */
	public final TableField<EntityRecord, Integer> CLUSTER_VARIABLE_ID = createField("cluster_variable_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>calc.entity.unit_no_variable_id</code>.
	 */
	public final TableField<EntityRecord, Integer> UNIT_NO_VARIABLE_ID = createField("unit_no_variable_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>calc.entity.original_id</code>.
	 */
	public final TableField<EntityRecord, Integer> ORIGINAL_ID = createField("original_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>calc.entity.caption</code>.
	 */
	public final TableField<EntityRecord, String> CAPTION = createField("caption", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.entity.description</code>.
	 */
	public final TableField<EntityRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>calc.entity.sort_order</code>.
	 */
	public final TableField<EntityRecord, Integer> SORT_ORDER = createField("sort_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>calc.entity.plot_area_script</code>.
	 */
	public final TableField<EntityRecord, String> PLOT_AREA_SCRIPT = createField("plot_area_script", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>calc.entity</code> table reference
	 */
	public EntityTable() {
		this("entity", null);
	}

	/**
	 * Create an aliased <code>calc.entity</code> table reference
	 */
	public EntityTable(String alias) {
		this(alias, ENTITY);
	}

	private EntityTable(String alias, Table<EntityRecord> aliased) {
		this(alias, aliased, null);
	}

	private EntityTable(String alias, Table<EntityRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EntityRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ENTITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EntityRecord> getPrimaryKey() {
		return Keys.ENTITY_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EntityRecord>> getKeys() {
		return Arrays.<UniqueKey<EntityRecord>>asList(Keys.ENTITY_PKEY, Keys.ENTITY_WORKSPACE_ID_NAME_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<EntityRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<EntityRecord, ?>>asList(Keys.ENTITY__ENTITY_WORKSPACE_FKEY, Keys.ENTITY__ENTITY_PARENT_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EntityTable as(String alias) {
		return new EntityTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EntityTable rename(String name) {
		return new EntityTable(name, null);
	}
}
