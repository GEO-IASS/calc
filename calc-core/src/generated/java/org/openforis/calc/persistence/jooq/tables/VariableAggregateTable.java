/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.tables.records.VariableAggregateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariableAggregateTable extends TableImpl<VariableAggregateRecord> {

	private static final long serialVersionUID = -782203031;

	/**
	 * The reference instance of <code>calc.variable_aggregate</code>
	 */
	public static final VariableAggregateTable VARIABLE_AGGREGATE = new VariableAggregateTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VariableAggregateRecord> getRecordType() {
		return VariableAggregateRecord.class;
	}

	/**
	 * The column <code>calc.variable_aggregate.id</code>.
	 */
	public final TableField<VariableAggregateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.variable_aggregate.variable_id</code>.
	 */
	public final TableField<VariableAggregateRecord, Integer> VARIABLE_ID = createField("variable_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>calc.variable_aggregate.name</code>.
	 */
	public final TableField<VariableAggregateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.variable_aggregate.aggregate_column</code>.
	 */
	public final TableField<VariableAggregateRecord, String> AGGREGATE_COLUMN = createField("aggregate_column", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.variable_aggregate.aggregate_formula</code>.
	 */
	public final TableField<VariableAggregateRecord, String> AGGREGATE_FORMULA = createField("aggregate_formula", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

	/**
	 * The column <code>calc.variable_aggregate.aggregate_type</code>.
	 */
	public final TableField<VariableAggregateRecord, String> AGGREGATE_TYPE = createField("aggregate_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.variable_aggregate.caption</code>.
	 */
	public final TableField<VariableAggregateRecord, String> CAPTION = createField("caption", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.variable_aggregate.description</code>.
	 */
	public final TableField<VariableAggregateRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * Create a <code>calc.variable_aggregate</code> table reference
	 */
	public VariableAggregateTable() {
		this("variable_aggregate", null);
	}

	/**
	 * Create an aliased <code>calc.variable_aggregate</code> table reference
	 */
	public VariableAggregateTable(String alias) {
		this(alias, VARIABLE_AGGREGATE);
	}

	private VariableAggregateTable(String alias, Table<VariableAggregateRecord> aliased) {
		this(alias, aliased, null);
	}

	private VariableAggregateTable(String alias, Table<VariableAggregateRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<VariableAggregateRecord, Integer> getIdentity() {
		return Keys.IDENTITY_VARIABLE_AGGREGATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<VariableAggregateRecord> getPrimaryKey() {
		return Keys.VARIABLE_AGGREGATE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<VariableAggregateRecord>> getKeys() {
		return Arrays.<UniqueKey<VariableAggregateRecord>>asList(Keys.VARIABLE_AGGREGATE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<VariableAggregateRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<VariableAggregateRecord, ?>>asList(Keys.VARIABLE_AGGREGATE__VARIABLE_AGGREGATE_VARIABLE_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VariableAggregateTable as(String alias) {
		return new VariableAggregateTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public VariableAggregateTable rename(String name) {
		return new VariableAggregateTable(name, null);
	}
}
