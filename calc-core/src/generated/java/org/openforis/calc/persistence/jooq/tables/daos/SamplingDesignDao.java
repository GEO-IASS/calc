/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.daos;

import org.openforis.calc.metadata.SamplingDesign;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SamplingDesignDao extends org.jooq.impl.DAOImpl<org.openforis.calc.persistence.jooq.tables.records.SamplingDesignRecord, SamplingDesign, java.lang.Integer> {

	/**
	 * Create a new SamplingDesignDao without any configuration
	 */
	public SamplingDesignDao() {
		super(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN, SamplingDesign.class);
	}

	/**
	 * Create a new SamplingDesignDao with an attached configuration
	 */
	public SamplingDesignDao(org.jooq.Configuration configuration) {
		super(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN, SamplingDesign.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(SamplingDesign object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchById(java.lang.Integer... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public SamplingDesign fetchOneById(java.lang.Integer value) {
		return fetchOne(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.ID, value);
	}

	/**
	 * Fetch records that have <code>sampling_unit_id IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchBySamplingUnitId(java.lang.Integer... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.SAMPLING_UNIT_ID, values);
	}

	/**
	 * Fetch records that have <code>workspace_id IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByWorkspaceId(java.lang.Integer... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.WORKSPACE_ID, values);
	}

	/**
	 * Fetch records that have <code>srs IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchBySrs(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.SRS, values);
	}

	/**
	 * Fetch records that have <code>systematic IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchBySystematic(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.SYSTEMATIC, values);
	}

	/**
	 * Fetch records that have <code>two_phases IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByTwoPhases(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.TWO_PHASES, values);
	}

	/**
	 * Fetch records that have <code>stratified IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByStratified(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.STRATIFIED, values);
	}

	/**
	 * Fetch records that have <code>cluster IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByCluster(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.CLUSTER, values);
	}

	/**
	 * Fetch records that have <code>phase1_join_settings IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByPhase1JoinSettings(org.openforis.calc.engine.ParameterMap... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.PHASE1_JOIN_SETTINGS, values);
	}

	/**
	 * Fetch records that have <code>stratum_join_settings IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByStratumJoinSettings(org.openforis.calc.engine.ParameterMap... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.STRATUM_JOIN_SETTINGS, values);
	}

	/**
	 * Fetch records that have <code>cluster_column_settings IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByClusterColumnSettings(org.openforis.calc.engine.ParameterMap... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.CLUSTER_COLUMN_SETTINGS, values);
	}

	/**
	 * Fetch records that have <code>aoi_join_settings IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByAoiJoinSettings(org.openforis.calc.engine.ParameterMap... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.AOI_JOIN_SETTINGS, values);
	}

	/**
	 * Fetch records that have <code>sampling_unit_weight_script IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchBySamplingUnitWeightScript(java.lang.String... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.SAMPLING_UNIT_WEIGHT_SCRIPT, values);
	}

	/**
	 * Fetch records that have <code>two_stages IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByTwoStages(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.TWO_STAGES, values);
	}

	/**
	 * Fetch records that have <code>two_stages_settings IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByTwoStagesSettings(org.openforis.calc.engine.ParameterMap... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.TWO_STAGES_SETTINGS, values);
	}

	/**
	 * Fetch records that have <code>apply_area_weighted IN (values)</code>
	 */
	public java.util.List<SamplingDesign> fetchByApplyAreaWeighted(java.lang.Boolean... values) {
		return fetch(org.openforis.calc.persistence.jooq.tables.SamplingDesignTable.SAMPLING_DESIGN.APPLY_AREA_WEIGHTED, values);
	}
}
