/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.openforis.calc.persistence.jooq.CalcSchema;
import org.openforis.calc.persistence.jooq.Keys;
import org.openforis.calc.persistence.jooq.tables.records.WorkspaceRecord;


/**
 * One cycle of an inventory.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkspaceTable extends TableImpl<WorkspaceRecord> {

	private static final long serialVersionUID = 692950750;

	/**
	 * The reference instance of <code>calc.workspace</code>
	 */
	public static final WorkspaceTable WORKSPACE = new WorkspaceTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<WorkspaceRecord> getRecordType() {
		return WorkspaceRecord.class;
	}

	/**
	 * The column <code>calc.workspace.id</code>.
	 */
	public final TableField<WorkspaceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>calc.workspace.name</code>.
	 */
	public final TableField<WorkspaceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.workspace.collect_survey_uri</code>.
	 */
	public final TableField<WorkspaceRecord, String> COLLECT_SURVEY_URI = createField("collect_survey_uri", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.workspace.input_schema</code>.
	 */
	public final TableField<WorkspaceRecord, String> INPUT_SCHEMA = createField("input_schema", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.workspace.output_schema</code>.
	 */
	public final TableField<WorkspaceRecord, String> OUTPUT_SCHEMA = createField("output_schema", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>calc.workspace.caption</code>.
	 */
	public final TableField<WorkspaceRecord, String> CAPTION = createField("caption", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>calc.workspace.description</code>.
	 */
	public final TableField<WorkspaceRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>calc.workspace.active</code>.
	 */
	public final TableField<WorkspaceRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>calc.workspace.phase1_plot_table</code>.
	 */
	public final TableField<WorkspaceRecord, String> PHASE1_PLOT_TABLE = createField("phase1_plot_table", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>calc.workspace</code> table reference
	 */
	public WorkspaceTable() {
		this("workspace", null);
	}

	/**
	 * Create an aliased <code>calc.workspace</code> table reference
	 */
	public WorkspaceTable(String alias) {
		this(alias, WORKSPACE);
	}

	private WorkspaceTable(String alias, Table<WorkspaceRecord> aliased) {
		this(alias, aliased, null);
	}

	private WorkspaceTable(String alias, Table<WorkspaceRecord> aliased, Field<?>[] parameters) {
		super(alias, CalcSchema.CALC, aliased, parameters, "One cycle of an inventory.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<WorkspaceRecord, Integer> getIdentity() {
		return Keys.IDENTITY_WORKSPACE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<WorkspaceRecord> getPrimaryKey() {
		return Keys.WORKSPACE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<WorkspaceRecord>> getKeys() {
		return Arrays.<UniqueKey<WorkspaceRecord>>asList(Keys.WORKSPACE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkspaceTable as(String alias) {
		return new WorkspaceTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public WorkspaceTable rename(String name) {
		return new WorkspaceTable(name, null);
	}
}
