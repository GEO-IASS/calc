/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.0"},
                            comments = "This class is generated by jOOQ")
public class PlotRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.PlotRecord> {

	private static final long serialVersionUID = 1630631890;

	/**
	 * The table column <code>calc.plot.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.ID, value);
	}

	/**
	 * The table column <code>calc.plot.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.ID);
	}

	/**
	 * The table column <code>calc.plot.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.PlotSurveyRecord> fetchPlotSurveyTableList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.PlotSurveyTable.PLOT_SURVEY)
			.where(org.openforis.calc.persistence.jooq.tables.PlotSurveyTable.PLOT_SURVEY.PLOT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.plot.survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_survey
	 * FOREIGN KEY (survey_id)
	 * REFERENCES calc.survey (id)
	 * </pre></code>
	 */
	public void setSurveyId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SURVEY_ID, value);
	}

	/**
	 * The table column <code>calc.plot.survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_survey
	 * FOREIGN KEY (survey_id)
	 * REFERENCES calc.survey (id)
	 * </pre></code>
	 */
	public java.lang.Integer getSurveyId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SURVEY_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.SurveyRecord 
	 * SurveyRecord}
	 */
	public void setSurveyId(org.openforis.calc.persistence.jooq.tables.records.SurveyRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SURVEY_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SURVEY_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.SurveyTable.SURVEY.ID));
		}
	}

	/**
	 * The table column <code>calc.plot.survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_survey
	 * FOREIGN KEY (survey_id)
	 * REFERENCES calc.survey (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.SurveyRecord fetchSurveyTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.SurveyTable.SURVEY)
			.where(org.openforis.calc.persistence.jooq.tables.SurveyTable.SURVEY.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SURVEY_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.plot.cluster_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_cluster
	 * FOREIGN KEY (cluster_id)
	 * REFERENCES calc.cluster (id)
	 * </pre></code>
	 */
	public void setClusterId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CLUSTER_ID, value);
	}

	/**
	 * The table column <code>calc.plot.cluster_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_cluster
	 * FOREIGN KEY (cluster_id)
	 * REFERENCES calc.cluster (id)
	 * </pre></code>
	 */
	public java.lang.Integer getClusterId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CLUSTER_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.ClusterRecord 
	 * ClusterRecord}
	 */
	public void setClusterId(org.openforis.calc.persistence.jooq.tables.records.ClusterRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CLUSTER_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CLUSTER_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.ClusterTable.CLUSTER.ID));
		}
	}

	/**
	 * The table column <code>calc.plot.cluster_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_cluster
	 * FOREIGN KEY (cluster_id)
	 * REFERENCES calc.cluster (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.ClusterRecord fetchClusterTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.ClusterTable.CLUSTER)
			.where(org.openforis.calc.persistence.jooq.tables.ClusterTable.CLUSTER.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CLUSTER_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.plot.no</code>
	 */
	public void setNo(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.NO, value);
	}

	/**
	 * The table column <code>calc.plot.no</code>
	 */
	public java.lang.Integer getNo() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.NO);
	}

	/**
	 * The table column <code>calc.plot.code</code>
	 */
	public void setCode(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CODE, value);
	}

	/**
	 * The table column <code>calc.plot.code</code>
	 */
	public java.lang.String getCode() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.CODE);
	}

	/**
	 * The table column <code>calc.plot.location</code>
	 * <p>
	 * The SQL type of this item (USER-DEFINED, geometry) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public void setLocation(java.lang.Object value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.LOCATION, value);
	}

	/**
	 * The table column <code>calc.plot.location</code>
	 * <p>
	 * The SQL type of this item (USER-DEFINED, geometry) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public java.lang.Object getLocation() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.LOCATION);
	}

	/**
	 * The table column <code>calc.plot.shape</code>
	 * <p>
	 * The SQL type of this item (USER-DEFINED, geometry) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public void setShape(java.lang.Object value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SHAPE, value);
	}

	/**
	 * The table column <code>calc.plot.shape</code>
	 * <p>
	 * The SQL type of this item (USER-DEFINED, geometry) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public java.lang.Object getShape() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.SHAPE);
	}

	/**
	 * The table column <code>calc.plot.phase</code>
	 */
	public void setPhase(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.PHASE, value);
	}

	/**
	 * The table column <code>calc.plot.phase</code>
	 */
	public java.lang.Integer getPhase() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.PHASE);
	}

	/**
	 * The table column <code>calc.plot.permanent_plot</code>
	 */
	public void setPermanentPlot(java.lang.Boolean value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.PERMANENT_PLOT, value);
	}

	/**
	 * The table column <code>calc.plot.permanent_plot</code>
	 */
	public java.lang.Boolean getPermanentPlot() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.PERMANENT_PLOT);
	}

	/**
	 * The table column <code>calc.plot.ground_plot</code>
	 */
	public void setGroundPlot(java.lang.Boolean value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.GROUND_PLOT, value);
	}

	/**
	 * The table column <code>calc.plot.ground_plot</code>
	 */
	public java.lang.Boolean getGroundPlot() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.GROUND_PLOT);
	}

	/**
	 * The table column <code>calc.plot.stratum_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_stratum
	 * FOREIGN KEY (stratum_id)
	 * REFERENCES calc.stratum (id)
	 * </pre></code>
	 */
	public void setStratumId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.STRATUM_ID, value);
	}

	/**
	 * The table column <code>calc.plot.stratum_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_stratum
	 * FOREIGN KEY (stratum_id)
	 * REFERENCES calc.stratum (id)
	 * </pre></code>
	 */
	public java.lang.Integer getStratumId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.STRATUM_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.StratumRecord 
	 * StratumRecord}
	 */
	public void setStratumId(org.openforis.calc.persistence.jooq.tables.records.StratumRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.STRATUM_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.STRATUM_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.StratumTable.STRATUM.ID));
		}
	}

	/**
	 * The table column <code>calc.plot.stratum_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot__fk_plot_stratum
	 * FOREIGN KEY (stratum_id)
	 * REFERENCES calc.stratum (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.StratumRecord fetchStratumTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.StratumTable.STRATUM)
			.where(org.openforis.calc.persistence.jooq.tables.StratumTable.STRATUM.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT.STRATUM_ID)))
			.fetchOne();
	}

	/**
	 * Create a detached PlotRecord
	 */
	public PlotRecord() {
		super(org.openforis.calc.persistence.jooq.tables.PlotTable.PLOT);
	}
}
