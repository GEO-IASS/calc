/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.0"},
                            comments = "This class is generated by jOOQ")
public class VariableRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.VariableRecord> {

	private static final long serialVersionUID = 1322400230;

	/**
	 * The table column <code>calc.variable.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID, value);
	}

	/**
	 * The table column <code>calc.variable.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID);
	}

	/**
	 * The table column <code>calc.variable.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.CategoryRecord> fetchCategoryTableListByBandingSourceVariableIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.CategoryTable.CATEGORY)
			.where(org.openforis.calc.persistence.jooq.tables.CategoryTable.CATEGORY.BANDING_SOURCE_VARIABLE_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.variable.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.CategoryRecord> fetchCategoryTableListByVariableIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.CategoryTable.CATEGORY)
			.where(org.openforis.calc.persistence.jooq.tables.CategoryTable.CATEGORY.VARIABLE_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.variable.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.PlotMeasurementRecord> fetchPlotMeasurementTableList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT)
			.where(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VARIABLE_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.variable.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.SpecimenMeasurementRecord> fetchSpecimenMeasurementTableList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.SpecimenMeasurementTable.SPECIMEN_MEASUREMENT)
			.where(org.openforis.calc.persistence.jooq.tables.SpecimenMeasurementTable.SPECIMEN_MEASUREMENT.VARIABLE_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.variable.obs_unit_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT variable__fk_variable_obs_unit
	 * FOREIGN KEY (obs_unit_id)
	 * REFERENCES calc.observation_unit (id)
	 * </pre></code>
	 */
	public void setObsUnitId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.OBS_UNIT_ID, value);
	}

	/**
	 * The table column <code>calc.variable.obs_unit_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT variable__fk_variable_obs_unit
	 * FOREIGN KEY (obs_unit_id)
	 * REFERENCES calc.observation_unit (id)
	 * </pre></code>
	 */
	public java.lang.Integer getObsUnitId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.OBS_UNIT_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord 
	 * ObservationUnitRecord}
	 */
	public void setObsUnitId(org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.OBS_UNIT_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.OBS_UNIT_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.ObservationUnitTable.OBSERVATION_UNIT.ID));
		}
	}

	/**
	 * The table column <code>calc.variable.obs_unit_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT variable__fk_variable_obs_unit
	 * FOREIGN KEY (obs_unit_id)
	 * REFERENCES calc.observation_unit (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.ObservationUnitRecord fetchObservationUnitTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.ObservationUnitTable.OBSERVATION_UNIT)
			.where(org.openforis.calc.persistence.jooq.tables.ObservationUnitTable.OBSERVATION_UNIT.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.OBS_UNIT_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.variable.type</code>
	 */
	public void setType(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.TYPE, value);
	}

	/**
	 * The table column <code>calc.variable.type</code>
	 */
	public java.lang.String getType() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.TYPE);
	}

	/**
	 * The table column <code>calc.variable.name</code>
	 */
	public void setName(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.NAME, value);
	}

	/**
	 * The table column <code>calc.variable.name</code>
	 */
	public java.lang.String getName() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.NAME);
	}

	/**
	 * The table column <code>calc.variable.order</code>
	 */
	public void setOrder(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ORDER, value);
	}

	/**
	 * The table column <code>calc.variable.order</code>
	 */
	public java.lang.Integer getOrder() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ORDER);
	}

	/**
	 * The table column <code>calc.variable.source_id</code>
	 */
	public void setSourceId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.SOURCE_ID, value);
	}

	/**
	 * The table column <code>calc.variable.source_id</code>
	 */
	public java.lang.Integer getSourceId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.SOURCE_ID);
	}

	/**
	 * The table column <code>calc.variable.default_label</code>
	 */
	public void setDefaultLabel(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.DEFAULT_LABEL, value);
	}

	/**
	 * The table column <code>calc.variable.default_label</code>
	 */
	public java.lang.String getDefaultLabel() {
		return getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.DEFAULT_LABEL);
	}

	/**
	 * Create a detached VariableRecord
	 */
	public VariableRecord() {
		super(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE);
	}
}
