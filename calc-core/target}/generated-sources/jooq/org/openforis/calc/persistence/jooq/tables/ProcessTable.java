/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.0"},
                            comments = "This class is generated by jOOQ")
public class ProcessTable extends org.jooq.impl.UpdatableTableImpl<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord> {

	private static final long serialVersionUID = -1801227970;

	/**
	 * The singleton instance of calc.process
	 */
	public static final org.openforis.calc.persistence.jooq.tables.ProcessTable PROCESS = new org.openforis.calc.persistence.jooq.tables.ProcessTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord> getRecordType() {
		return org.openforis.calc.persistence.jooq.tables.records.ProcessRecord.class;
	}

	/**
	 * The table column <code>calc.process.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.process.chain_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_processing_chain
	 * FOREIGN KEY (chain_id)
	 * REFERENCES calc.processing_chain (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.Integer> CHAIN_ID = createField("chain_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.process.operation_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT process__fk_process_operation
	 * FOREIGN KEY (operation_id)
	 * REFERENCES calc.operation (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.Integer> OPERATION_ID = createField("operation_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.process.name</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.process.description</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.process.order</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.Integer> ORDER = createField("order", org.jooq.impl.SQLDataType.INTEGER, this);

	public ProcessTable() {
		super("process", org.openforis.calc.persistence.jooq.CalcTable.CALC);
	}

	public ProcessTable(java.lang.String alias) {
		super(alias, org.openforis.calc.persistence.jooq.CalcTable.CALC, org.openforis.calc.persistence.jooq.tables.ProcessTable.PROCESS);
	}

	@Override
	public org.jooq.Identity<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, java.lang.Integer> getIdentity() {
		return org.openforis.calc.persistence.jooq.Keys.IDENTITY_PROCESS;
	}

	@Override
	public org.jooq.UniqueKey<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord> getMainKey() {
		return org.openforis.calc.persistence.jooq.Keys.PROCESS_PKEY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord>>asList(org.openforis.calc.persistence.jooq.Keys.PROCESS_PKEY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.openforis.calc.persistence.jooq.tables.records.ProcessRecord, ?>>asList(org.openforis.calc.persistence.jooq.Keys.PROCESS__FK_PROCESS_PROCESSING_CHAIN, org.openforis.calc.persistence.jooq.Keys.PROCESS__FK_PROCESS_OPERATION);
	}

	@Override
	public org.openforis.calc.persistence.jooq.tables.ProcessTable as(java.lang.String alias) {
		return new org.openforis.calc.persistence.jooq.tables.ProcessTable(alias);
	}
}
