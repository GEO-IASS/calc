/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.0"},
                            comments = "This class is generated by jOOQ")
public class TaxonRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> {

	private static final long serialVersionUID = -1683251245;

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID, value);
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID);
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.SpecimenRecord> fetchSpecimenTableList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.SpecimenTable.SPECIMEN)
			.where(org.openforis.calc.persistence.jooq.tables.SpecimenTable.SPECIMEN.TAXON_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> fetchTaxonTableListByAcceptedNameIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCEPTED_NAME_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> fetchTaxonTableListByOriginalNameIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ORIGINAL_NAME_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> fetchTaxonTableListByParentIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PARENT_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.util.List<org.openforis.calc.persistence.jooq.tables.records.TaxonVernacularNameRecord> fetchTaxonVernacularNameTableList() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonVernacularNameTable.TAXON_VERNACULAR_NAME)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonVernacularNameTable.TAXON_VERNACULAR_NAME.ACCEPTED_NAME_ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID)))
			.fetch();
	}

	/**
	 * The table column <code>calc.taxon.checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_checklist
	 * FOREIGN KEY (checklist_id)
	 * REFERENCES calc.taxonomic_checklist (id)
	 * </pre></code>
	 */
	public void setChecklistId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CHECKLIST_ID, value);
	}

	/**
	 * The table column <code>calc.taxon.checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_checklist
	 * FOREIGN KEY (checklist_id)
	 * REFERENCES calc.taxonomic_checklist (id)
	 * </pre></code>
	 */
	public java.lang.Integer getChecklistId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CHECKLIST_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.TaxonomicChecklistRecord 
	 * TaxonomicChecklistRecord}
	 */
	public void setChecklistId(org.openforis.calc.persistence.jooq.tables.records.TaxonomicChecklistRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CHECKLIST_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CHECKLIST_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.TaxonomicChecklistTable.TAXONOMIC_CHECKLIST.ID));
		}
	}

	/**
	 * The table column <code>calc.taxon.checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_checklist
	 * FOREIGN KEY (checklist_id)
	 * REFERENCES calc.taxonomic_checklist (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.TaxonomicChecklistRecord fetchTaxonomicChecklistTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonomicChecklistTable.TAXONOMIC_CHECKLIST)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonomicChecklistTable.TAXONOMIC_CHECKLIST.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CHECKLIST_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.taxon.code</code>
	 */
	public void setCode(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CODE, value);
	}

	/**
	 * The table column <code>calc.taxon.code</code>
	 */
	public java.lang.String getCode() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.CODE);
	}

	/**
	 * The table column <code>calc.taxon.scientific_name_id</code>
	 */
	public void setScientificNameId(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.SCIENTIFIC_NAME_ID, value);
	}

	/**
	 * The table column <code>calc.taxon.scientific_name_id</code>
	 */
	public java.lang.String getScientificNameId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.SCIENTIFIC_NAME_ID);
	}

	/**
	 * The table column <code>calc.taxon.scientific_name</code>
	 */
	public void setScientificName(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.SCIENTIFIC_NAME, value);
	}

	/**
	 * The table column <code>calc.taxon.scientific_name</code>
	 */
	public java.lang.String getScientificName() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.SCIENTIFIC_NAME);
	}

	/**
	 * The table column <code>calc.taxon.according_to</code>
	 */
	public void setAccordingTo(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCORDING_TO, value);
	}

	/**
	 * The table column <code>calc.taxon.according_to</code>
	 */
	public java.lang.String getAccordingTo() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCORDING_TO);
	}

	/**
	 * The table column <code>calc.taxon.published_in</code>
	 */
	public void setPublishedIn(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PUBLISHED_IN, value);
	}

	/**
	 * The table column <code>calc.taxon.published_in</code>
	 */
	public java.lang.String getPublishedIn() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PUBLISHED_IN);
	}

	/**
	 * The table column <code>calc.taxon.published_in_year</code>
	 */
	public void setPublishedInYear(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PUBLISHED_IN_YEAR, value);
	}

	/**
	 * The table column <code>calc.taxon.published_in_year</code>
	 */
	public java.lang.Integer getPublishedInYear() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PUBLISHED_IN_YEAR);
	}

	/**
	 * The table column <code>calc.taxon.specific_epithet</code>
	 */
	public void setSpecificEpithet(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.SPECIFIC_EPITHET, value);
	}

	/**
	 * The table column <code>calc.taxon.specific_epithet</code>
	 */
	public java.lang.String getSpecificEpithet() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.SPECIFIC_EPITHET);
	}

	/**
	 * The table column <code>calc.taxon.infraspecific_epithet</code>
	 */
	public void setInfraspecificEpithet(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.INFRASPECIFIC_EPITHET, value);
	}

	/**
	 * The table column <code>calc.taxon.infraspecific_epithet</code>
	 */
	public java.lang.String getInfraspecificEpithet() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.INFRASPECIFIC_EPITHET);
	}

	/**
	 * The table column <code>calc.taxon.rank</code>
	 */
	public void setRank(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.RANK, value);
	}

	/**
	 * The table column <code>calc.taxon.rank</code>
	 */
	public java.lang.String getRank() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.RANK);
	}

	/**
	 * The table column <code>calc.taxon.authorship</code>
	 */
	public void setAuthorship(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.AUTHORSHIP, value);
	}

	/**
	 * The table column <code>calc.taxon.authorship</code>
	 */
	public java.lang.String getAuthorship() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.AUTHORSHIP);
	}

	/**
	 * The table column <code>calc.taxon.nomenclatural_code</code>
	 */
	public void setNomenclaturalCode(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.NOMENCLATURAL_CODE, value);
	}

	/**
	 * The table column <code>calc.taxon.nomenclatural_code</code>
	 */
	public java.lang.String getNomenclaturalCode() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.NOMENCLATURAL_CODE);
	}

	/**
	 * The table column <code>calc.taxon.taxonomic_status</code>
	 */
	public void setTaxonomicStatus(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.TAXONOMIC_STATUS, value);
	}

	/**
	 * The table column <code>calc.taxon.taxonomic_status</code>
	 */
	public java.lang.String getTaxonomicStatus() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.TAXONOMIC_STATUS);
	}

	/**
	 * The table column <code>calc.taxon.nomenclatural_status</code>
	 */
	public void setNomenclaturalStatus(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.NOMENCLATURAL_STATUS, value);
	}

	/**
	 * The table column <code>calc.taxon.nomenclatural_status</code>
	 */
	public java.lang.String getNomenclaturalStatus() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.NOMENCLATURAL_STATUS);
	}

	/**
	 * The table column <code>calc.taxon.remarks</code>
	 */
	public void setRemarks(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.REMARKS, value);
	}

	/**
	 * The table column <code>calc.taxon.remarks</code>
	 */
	public java.lang.String getRemarks() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.REMARKS);
	}

	/**
	 * The table column <code>calc.taxon.references</code>
	 */
	public void setReferences(java.lang.String value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.REFERENCES, value);
	}

	/**
	 * The table column <code>calc.taxon.references</code>
	 */
	public java.lang.String getReferences() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.REFERENCES);
	}

	/**
	 * The table column <code>calc.taxon.parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_parent
	 * FOREIGN KEY (parent_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public void setParentId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PARENT_ID, value);
	}

	/**
	 * The table column <code>calc.taxon.parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_parent
	 * FOREIGN KEY (parent_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public java.lang.Integer getParentId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PARENT_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.TaxonRecord 
	 * TaxonRecord}
	 */
	public void setParentId(org.openforis.calc.persistence.jooq.tables.records.TaxonRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PARENT_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PARENT_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID));
		}
	}

	/**
	 * The table column <code>calc.taxon.parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_parent
	 * FOREIGN KEY (parent_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.TaxonRecord fetchTaxonTableByParentIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.PARENT_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.taxon.original_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_original_name
	 * FOREIGN KEY (original_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public void setOriginalNameId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ORIGINAL_NAME_ID, value);
	}

	/**
	 * The table column <code>calc.taxon.original_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_original_name
	 * FOREIGN KEY (original_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public java.lang.Integer getOriginalNameId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ORIGINAL_NAME_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.TaxonRecord 
	 * TaxonRecord}
	 */
	public void setOriginalNameId(org.openforis.calc.persistence.jooq.tables.records.TaxonRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ORIGINAL_NAME_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ORIGINAL_NAME_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID));
		}
	}

	/**
	 * The table column <code>calc.taxon.original_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_original_name
	 * FOREIGN KEY (original_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.TaxonRecord fetchTaxonTableByOriginalNameIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ORIGINAL_NAME_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.taxon.accepted_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_accepted_name
	 * FOREIGN KEY (accepted_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public void setAcceptedNameId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCEPTED_NAME_ID, value);
	}

	/**
	 * The table column <code>calc.taxon.accepted_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_accepted_name
	 * FOREIGN KEY (accepted_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public java.lang.Integer getAcceptedNameId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCEPTED_NAME_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.TaxonRecord 
	 * TaxonRecord}
	 */
	public void setAcceptedNameId(org.openforis.calc.persistence.jooq.tables.records.TaxonRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCEPTED_NAME_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCEPTED_NAME_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID));
		}
	}

	/**
	 * The table column <code>calc.taxon.accepted_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_accepted_name
	 * FOREIGN KEY (accepted_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.TaxonRecord fetchTaxonTableByAcceptedNameIdTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON)
			.where(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON.ACCEPTED_NAME_ID)))
			.fetchOne();
	}

	/**
	 * Create a detached TaxonRecord
	 */
	public TaxonRecord() {
		super(org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON);
	}
}
