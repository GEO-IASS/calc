/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.0"},
                            comments = "This class is generated by jOOQ")
public class TaxonTable extends org.jooq.impl.UpdatableTableImpl<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> {

	private static final long serialVersionUID = -1461673283;

	/**
	 * The singleton instance of calc.taxon
	 */
	public static final org.openforis.calc.persistence.jooq.tables.TaxonTable TAXON = new org.openforis.calc.persistence.jooq.tables.TaxonTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> getRecordType() {
		return org.openforis.calc.persistence.jooq.tables.records.TaxonRecord.class;
	}

	/**
	 * The table column <code>calc.taxon.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.taxon.checklist_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_checklist
	 * FOREIGN KEY (checklist_id)
	 * REFERENCES calc.taxonomic_checklist (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> CHECKLIST_ID = createField("checklist_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.taxon.code</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.scientific_name_id</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> SCIENTIFIC_NAME_ID = createField("scientific_name_id", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.scientific_name</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> SCIENTIFIC_NAME = createField("scientific_name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.according_to</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> ACCORDING_TO = createField("according_to", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.published_in</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> PUBLISHED_IN = createField("published_in", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.published_in_year</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> PUBLISHED_IN_YEAR = createField("published_in_year", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.taxon.specific_epithet</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> SPECIFIC_EPITHET = createField("specific_epithet", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.infraspecific_epithet</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> INFRASPECIFIC_EPITHET = createField("infraspecific_epithet", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.rank</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> RANK = createField("rank", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.authorship</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> AUTHORSHIP = createField("authorship", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.nomenclatural_code</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> NOMENCLATURAL_CODE = createField("nomenclatural_code", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.taxonomic_status</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> TAXONOMIC_STATUS = createField("taxonomic_status", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.nomenclatural_status</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> NOMENCLATURAL_STATUS = createField("nomenclatural_status", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.remarks</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.references</code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.String> REFERENCES = createField("references", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * The table column <code>calc.taxon.parent_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_parent
	 * FOREIGN KEY (parent_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.taxon.original_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_original_name
	 * FOREIGN KEY (original_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> ORIGINAL_NAME_ID = createField("original_name_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The table column <code>calc.taxon.accepted_name_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT taxon__fk_taxon_accepted_name
	 * FOREIGN KEY (accepted_name_id)
	 * REFERENCES calc.taxon (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> ACCEPTED_NAME_ID = createField("accepted_name_id", org.jooq.impl.SQLDataType.INTEGER, this);

	public TaxonTable() {
		super("taxon", org.openforis.calc.persistence.jooq.CalcTable.CALC);
	}

	public TaxonTable(java.lang.String alias) {
		super(alias, org.openforis.calc.persistence.jooq.CalcTable.CALC, org.openforis.calc.persistence.jooq.tables.TaxonTable.TAXON);
	}

	@Override
	public org.jooq.Identity<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, java.lang.Integer> getIdentity() {
		return org.openforis.calc.persistence.jooq.Keys.IDENTITY_TAXON;
	}

	@Override
	public org.jooq.UniqueKey<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord> getMainKey() {
		return org.openforis.calc.persistence.jooq.Keys.TAXON_PKEY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord>>asList(org.openforis.calc.persistence.jooq.Keys.TAXON_PKEY);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.openforis.calc.persistence.jooq.tables.records.TaxonRecord, ?>>asList(org.openforis.calc.persistence.jooq.Keys.TAXON__FK_TAXON_CHECKLIST, org.openforis.calc.persistence.jooq.Keys.TAXON__FK_TAXON_PARENT, org.openforis.calc.persistence.jooq.Keys.TAXON__FK_TAXON_ORIGINAL_NAME, org.openforis.calc.persistence.jooq.Keys.TAXON__FK_TAXON_ACCEPTED_NAME);
	}

	@Override
	public org.openforis.calc.persistence.jooq.tables.TaxonTable as(java.lang.String alias) {
		return new org.openforis.calc.persistence.jooq.tables.TaxonTable(alias);
	}
}
