/**
 * This class is generated by jOOQ
 */
package org.openforis.calc.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.5.0"},
                            comments = "This class is generated by jOOQ")
public class PlotMeasurementRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.calc.persistence.jooq.tables.records.PlotMeasurementRecord> {

	private static final long serialVersionUID = -926865053;

	/**
	 * The table column <code>calc.plot_measurement.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.ID, value);
	}

	/**
	 * The table column <code>calc.plot_measurement.id</code>
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.ID);
	}

	/**
	 * The table column <code>calc.plot_measurement.plot_survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot_measurement__fk_plot_measurement_survey
	 * FOREIGN KEY (plot_survey_id)
	 * REFERENCES calc.plot_survey (id)
	 * </pre></code>
	 */
	public void setPlotSurveyId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.PLOT_SURVEY_ID, value);
	}

	/**
	 * The table column <code>calc.plot_measurement.plot_survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot_measurement__fk_plot_measurement_survey
	 * FOREIGN KEY (plot_survey_id)
	 * REFERENCES calc.plot_survey (id)
	 * </pre></code>
	 */
	public java.lang.Integer getPlotSurveyId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.PLOT_SURVEY_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.PlotSurveyRecord 
	 * PlotSurveyRecord}
	 */
	public void setPlotSurveyId(org.openforis.calc.persistence.jooq.tables.records.PlotSurveyRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.PLOT_SURVEY_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.PLOT_SURVEY_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.PlotSurveyTable.PLOT_SURVEY.ID));
		}
	}

	/**
	 * The table column <code>calc.plot_measurement.plot_survey_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot_measurement__fk_plot_measurement_survey
	 * FOREIGN KEY (plot_survey_id)
	 * REFERENCES calc.plot_survey (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.PlotSurveyRecord fetchPlotSurveyTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.PlotSurveyTable.PLOT_SURVEY)
			.where(org.openforis.calc.persistence.jooq.tables.PlotSurveyTable.PLOT_SURVEY.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.PLOT_SURVEY_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.plot_measurement.variable_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot_measurement__fk_plot_measurement_variable
	 * FOREIGN KEY (variable_id)
	 * REFERENCES calc.variable (id)
	 * </pre></code>
	 */
	public void setVariableId(java.lang.Integer value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VARIABLE_ID, value);
	}

	/**
	 * The table column <code>calc.plot_measurement.variable_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot_measurement__fk_plot_measurement_variable
	 * FOREIGN KEY (variable_id)
	 * REFERENCES calc.variable (id)
	 * </pre></code>
	 */
	public java.lang.Integer getVariableId() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VARIABLE_ID);
	}

	/**
	 * Link this record to a given {@link org.openforis.calc.persistence.jooq.tables.records.VariableRecord 
	 * VariableRecord}
	 */
	public void setVariableId(org.openforis.calc.persistence.jooq.tables.records.VariableRecord value) {
		if (value == null) {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VARIABLE_ID, null);
		}
		else {
			setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VARIABLE_ID, value.getValue(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID));
		}
	}

	/**
	 * The table column <code>calc.plot_measurement.variable_id</code>
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT plot_measurement__fk_plot_measurement_variable
	 * FOREIGN KEY (variable_id)
	 * REFERENCES calc.variable (id)
	 * </pre></code>
	 */
	public org.openforis.calc.persistence.jooq.tables.records.VariableRecord fetchVariableTable() {
		return create()
			.selectFrom(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE)
			.where(org.openforis.calc.persistence.jooq.tables.VariableTable.VARIABLE.ID.equal(getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VARIABLE_ID)))
			.fetchOne();
	}

	/**
	 * The table column <code>calc.plot_measurement.value</code>
	 */
	public void setValue(java.lang.Double value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VALUE, value);
	}

	/**
	 * The table column <code>calc.plot_measurement.value</code>
	 */
	public java.lang.Double getValue() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.VALUE);
	}

	/**
	 * The table column <code>calc.plot_measurement.computed</code>
	 */
	public void setComputed(java.lang.Boolean value) {
		setValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.COMPUTED, value);
	}

	/**
	 * The table column <code>calc.plot_measurement.computed</code>
	 */
	public java.lang.Boolean getComputed() {
		return getValue(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT.COMPUTED);
	}

	/**
	 * Create a detached PlotMeasurementRecord
	 */
	public PlotMeasurementRecord() {
		super(org.openforis.calc.persistence.jooq.tables.PlotMeasurementTable.PLOT_MEASUREMENT);
	}
}
