<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.openforis.calc</groupId>
		<artifactId>calc</artifactId>
		<version>1.0-a18-SNAPSHOT</version>
	</parent>

	<artifactId>calc-installer</artifactId>
	<packaging>pom</packaging>

	<name>Open Foris Calc Installer</name>
	<description>Module to create the installers for Open Foris Calc. They are produced by running the package phase with -Passembly parameter</description>

	<properties>
		<!-- to avoid replacing relative path to images and other resources used by the installer -->
		<installer-dir>src/main/installer</installer-dir>
		
		<installbuilder-file-name>openforiscalc_installbuilder.xml</installbuilder-file-name>
		<installbuilder-with-jdk-file-name>openforiscalc_installbuilder_jdk.xml</installbuilder-with-jdk-file-name>
		<!-- installer file names -->
		<windows-installer-file-name>OpenForisCalc-${project.version}-windows-installer.exe</windows-installer-file-name>
		<linux-installer-file-name>OpenForisCalc-${project.version}-linux-installer.run</linux-installer-file-name>
		<osx-installer-file-name>OpenForisCalc-${project.version}-osx-installer.run</osx-installer-file-name>	
	</properties>
	
	<profiles>
		<profile>
			<id>assembly</id>
			<build>
				<plugins>
				
					<!-- 1. copy installbuilder source files -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
						
							<execution>
								<id>copy-installbuilder-source-file</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-dir}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
								                <include>${installbuilder-file-name}</include>
								                <include>${installbuilder-with-jdk-file-name}</include>
								            </includes>
										</resource>
									</resources>
						            <overwrite>true</overwrite>
								</configuration>
							</execution>
						
						</executions>
					</plugin>
					
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
						
							<!-- 2. replace calc version into the xml installbuilder source file -->
							<execution>
								<id>replace-project-version</id>
								<phase>package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<includes>
										<include>${installer-dir}/${installbuilder-file-name}</include>
										<include>${installer-dir}/${installbuilder-with-jdk-file-name}</include>
									</includes>
									<regex>false</regex>
									<!-- the name of the token to replace -->
									<token>PROJECT_VERSION</token>
									<!-- replace it with the Maven project version -->
									<value>${project.version}</value>
								</configuration>
							</execution>
							
							<!-- 3. replace the output directory of the installer with the project.build.directory property-->
							<execution>
								<id>replace-output-directory</id>
								<phase>package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<includes>
										<include>${installer-dir}/${installbuilder-file-name}</include>
										<include>${installer-dir}/${installbuilder-with-jdk-file-name}</include>
									</includes>
									<regex>false</regex>
									<!-- the name of the token to replace -->
									<token>OUTPUT_DIRECTORY</token>
									<!-- replace it with the Maven project version -->
									<value>${project.build.directory}</value>
								</configuration>
							</execution>
							
						</executions>
						
					</plugin>
				
					<!-- 4. execute installbuilder to produce the installers -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							
							<execution>
								<id>windows-installer</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${basedir}/${installer-dir}/${installbuilder-file-name}</argument>
										<argument>windows</argument>
									</arguments>
								</configuration>
							</execution>
							
<!-- 							<execution> -->
<!-- 								<id>windows-installer-with-jdk</id> -->
<!-- 								<phase>package</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>exec</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<executable>${installbuilder-home}/bin/builder</executable> -->
<!-- 									<arguments> -->
<!-- 										<argument>build</argument> -->
<!-- 										<argument>${basedir}/${installer-dir}/${installbuilder-with-jdk-file-name}</argument> -->
<!-- 										<argument>windows</argument> -->
<!-- 									</arguments> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
							
							<execution>
								<id>linux-installer</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder-home}/bin/builder</executable>
									<arguments>
										<argument>build</argument>
										<argument>${basedir}/${installer-dir}/${installbuilder-file-name}</argument>
										<argument>linux</argument>
									</arguments>
								</configuration>
							</execution>
							
<!-- 							<execution> -->
<!-- 								<id>linux-installer-with-jdk</id> -->
<!-- 								<phase>package</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>exec</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<executable>${installbuilder-home}/bin/builder</executable> -->
<!-- 									<arguments> -->
<!-- 										<argument>build</argument> -->
<!-- 										<argument>${basedir}/${installer-dir}/${installbuilder-with-jdk-file-name}</argument> -->
<!-- 										<argument>linux</argument> -->
<!-- 									</arguments> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
							
						</executions>
					</plugin>
					
			    	<!-- 5. attach installers as artifact -->
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>build-helper-maven-plugin</artifactId>
					    <executions>
					        <execution>
					            <id>attach-installer-artifacts</id>
					            <phase>package</phase>
					            <goals>
					                <goal>attach-artifact</goal>
					            </goals>
					            <configuration>
					                <artifacts>
					                    <artifact>
					                        <file>${project.build.directory}/${windows-installer-file-name}</file>
					                        <classifier>windows</classifier>
					                        <type>exe</type>
					                    </artifact>
					                    <artifact>
					                        <file>${project.build.directory}/${linux-installer-file-name}</file>
					                        <classifier>linux</classifier>
					                        <type>run</type>
					                    </artifact>
					                </artifacts>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
				
				</plugins>
			</build>		
		</profile>
	</profiles>


</project>
